function generateSubsets(nums) {
    const subsets = [];
    const backtrack = (path, index) => {
        subsets.push([...path]);
        for (let i = index; i < nums.length; i++) {
            path.push(nums[i]);
            backtrack(path, i + 1);
            path.pop();
        }
    };
    backtrack([], 0);
    return subsets;
}
console.log(generateSubsets([1, 2, 3]));
// Output: [[], [1], [1, 2], [1, 2, 3], [1, 3], [2], [2, 3], [3]]

function isMajorityElement(arr, element) {
    const count = arr.filter(x => x === element).length;
    return count > arr.length / 2;
}
console.log(isMajorityElement([1, 2, 3, 3, 3, 3, 4, 4], 3)); // Output: true
console.log(isMajorityElement([1, 2, 3, 4, 4, 4, 5], 4)); // Output: false

function toCamelCase(str) {
    return str
        .toLowerCase()
        .split(/[\s-_]+/)
        .map((word, index) => index === 0 ? word : word[0].toUpperCase() + word.slice(1))
        .join('');
}
console.log(toCamelCase("hello world")); // Output: "helloWorld"
console.log(toCamelCase("Programming-JavaScript")); // Output: "programmingJavaScript"

function findSingle(arr) {
    return arr.reduce((acc, num) => acc ^ num);
}
console.log(findSingle([4, 1, 2, 1, 2])); // Output: 4

function countDown(n) {
    if (n < 0) return;
    console.log(n);
    countDown(n - 1);
}
countDown(5);
// Output: 5
// 4
// 3
// 2
// 1
// 0

function sortDescending(arr) {
    return arr.sort((a, b) => b - a);
}
console.log(sortDescending([5, 3, 8, 1, 2])); // Output: [8, 5, 3, 2, 1]

function isSortedAscending(arr) {
    for (let i = 0; i < arr.length - 1; i++) {
        if (arr[i] > arr[i + 1]) {
            return false;
        }
    }
    return true;
}
console.log(isSortedAscending([1, 2, 3, 4, 5])); // Output: true
console.log(isSortedAscending([5, 3, 4, 1, 2])); // Output: false

function convertToHoursAndMinutes(minutes) {
    const hours = Math.floor(minutes / 60);
    const remainingMinutes = minutes % 60;
    return `${hours} hours and ${remainingMinutes} minutes`;
}
console.log(convertToHoursAndMinutes(150)); // Output: "2 hours and 30 minutes"

function removeVowels(str) {
    return str.replace(/[aeiouAEIOU]/g, '');
}
console.log(removeVowels("Hello World")); // Output: "Hll Wrld"

function longestConsecutive(arr) {
    const set = new Set(arr);
    let maxLength = 0;
    for (const num of set) {
        if (!set.has(num - 1)) { // Checks if the current number is the start of a sequence
            let length = 0;
            while (set.has(num + length)) {
                length++;
            }
            maxLength = Math.max(maxLength, length);
        }
    }
    return maxLength;
}
console.log(longestConsecutive([100, 4, 200, 1, 3, 2])); // Output: 4 (sequence 1, 2, 3, 4)

function sumOfOdds(arr) {
    return arr.reduce((acc, num) => num % 2 !== 0 ? acc + num : acc, 0);
}
console.log(sumOfOdds([1, 2, 3, 4, 5])); // Output: 9 (1 + 3 + 5)

function hasRepeatingChars(str) {
    const seenChars = new Set();
    for (let char of str) {
        if (seenChars.has(char)) {
            return true;
        }
        seenChars.add(char);
    }
    return false;
}
console.log(hasRepeatingChars("hello")); // Output: true
console.log(hasRepeatingChars("abc")); // Output: false

function calculatePercentage(total, amount) {
    return (amount / total * 100).toFixed(2) + '%';
}
console.log(calculatePercentage(200, 50)); // Output: "25.00%"

function replaceLast(str, char, replacement) {
    const index = str.lastIndexOf(char);
    if (index === -1) return str;
    return str.substring(0, index) + replacement + str.substring(index + 1);
}
console.log(replaceLast("hello hello", "l", "x")); // Output: "hello helxo"

function isValidIPAddress(ip) {
    const parts = ip.split('.');
    return parts.length === 4 && parts.every(part => {
        const num = parseInt(part);
        return num >= 0 && num <= 255 && part === num.toString();
    });
}
console.log(isValidIPAddress("192.168.1.1")); // Output: true
console.log(isValidIPAddress("256.100.50.25")); // Output: false

function removeSpaces(str) {
    return str.replace(/\s+/g, '');
}
console.log(removeSpaces("Hello world")); // Output: "Helloworld"
