// Remove Last Occurrence of an Element
function removeLastOccurrence(arr, element) {
 for (let i = arr.length - 1; i >= 0; i--) {
 if (arr[i] === element) {
 arr.splice(i, 1);
 break;
 }
 }
 return arr;
}
console.log(removeLastOccurrence([3, 5, 3, 1], 3)); // Output: [3, 5, 1]

// Create a Nested Array
function nestArray(arr) {
 let result = [];
 for (let i = 0; i < arr.length; i += 2) {
 result.push(arr.slice(i, i + 2));
 }
 return result;
}
console.log(nestArray([1, 2, 3, 4, 5, 6])); // Output: [[1, 2], [3, 4], [5, 6]]
console.log(nestArray([1, 2, 3, 4, 5])); // Output: [[1, 2], [3, 4], [5]]

// // Check if All Values Are Even
function allEven(arr) {
 return arr.every(num => num % 2 === 0);
}
console.log(allEven([2, 4, 6, 8])); // Output: true
console.log(allEven([2, 3, 4, 6])); // Output: false

Replace Spaces with Plus Signs
function replaceSpaces(str) {
 return str.replace(/\s/g, '+');
}
console.log(replaceSpaces("Hello World from JavaScript")); // Output: "Hello+World+from+JavaScript"

// Find the Largest Number in Each Subarray
function largestInSubarrays(arr) {
 return arr.map(subArr => Math.max(...subArr));
}
console.log(largestInSubarrays([[10, 5, 2], [25, 8, 7], [1, 2, 3]])); // Output: [10, 25, 3]

// Return the Number of Days in a Month
function getDaysInMonth(month, year) {
 return new Date(year, month, 0).getDate();
}
console.log(getDaysInMonth(2, 2020)); // Output: 29 (Leap year)
console.log(getDaysInMonth(2, 2021)); // Output: 28

// Rotate Array to the Right
function rotateRight(arr, k) {
 k = k % arr.length; // Handle rotations greater than array length
 return arr.slice(-k).concat(arr.slice(0, arr.length - k));
}
console.log(rotateRight([1, 2, 3, 4, 5], 2)); // Output: [4, 5, 1, 2, 3]

// Detect Anagram
function areAnagrams(str1, str2) {
 const normalize = str => str.toLowerCase().replace(/[\W_]+/g, '').split('').sort().join('');
 return normalize(str1) === normalize(str2);
}
console.log(areAnagrams("listen", "silent")); // Output: true
console.log(areAnagrams("hello", "world")); // Output: false

// Sum of Positive Numbers After Negatives
function sumAfterFirstNegative(arr) {
 const negativeIndex = arr.findIndex(num => num < 0);
 return arr.slice(negativeIndex + 1).reduce((acc, num) => num > 0 ? acc + num : acc, 0);
}
console.log(sumAfterFirstNegative([1, 2, -3, 4, 5])); // Output: 9

// Random Element from Array
function getRandomElement(arr) {
 const randomIndex = Math.floor(Math.random() * arr.length);
 return arr[randomIndex];
}
console.log(getRandomElement([1, 2, 3, 4, 5])); // Output: (random element)

// Convert Hex Code to RGB
function hexToRgb(hex) {
 const r = parseInt(hex.slice(1, 3), 16);
 const g = parseInt(hex.slice(3, 5), 16);
 const b = parseInt(hex.slice(5, 7), 16);
 return `rgb(${r}, ${g}, ${b})`;
}
console.log(hexToRgb("#FFFFFF")); // Output: "rgb(255, 255, 255)"

// Validate Palindrome with Removal
function validPalindrome(str) {
 let left = 0, right = str.length - 1;
 while (left < right) {
 if (str[left] !== str[right]) {
 return isPalindrome(str, left + 1, right) || isPalindrome(str, left, right - 1);
 }
 left++;
 right--;
 }
 return true;
}
function isPalindrome(str, left, right) {
 while (left < right) {
 if (str[left++] !== str[right--]) {
 return false;
 }
 }
 return true;
}
console.log(validPalindrome("abca")); // Output: true
console.log(validPalindrome("abc")); // Output: false

// Find Minimum and Maximum in Array
function findMinMax(arr) {
 let min = arr[0], max = arr[0];
 for (let i = 1; i < arr.length; i++) {
 if (arr[i] > max) max = arr[i];
 if (arr[i] < min) min = arr[i];
 }
 return { min, max };
}
console.log(findMinMax([1, 2, 3, 4, 5])); // Output: { min: 1, max: 5 }
console.log(findMinMax([9, 5, 3, 8, 2])); // Output: { min: 2, max: 9 }

// Return Numbers as Words
function numberToWord(num) {
 const words = ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"];
 return words[num];
}
console.log(numberToWord(5)); // Output: "five"
console.log(numberToWord(0)); // Output: "zero"
