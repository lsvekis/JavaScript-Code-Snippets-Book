// Sum of Squares
function sumOfSquares(nums) {
 return nums.reduce((acc, num) => acc + num * num, 0);
}
console.log(sumOfSquares([1, 2, 3])); // Output: 14 (1^2 + 2^2 + 3^2)

// Check if String Ends with Another String
function stringEndsWith(str, suffix) {
 return str.endsWith(suffix);
}
console.log(stringEndsWith("Hello world", "world")); // Output: true
console.log(stringEndsWith("Hello world", "hello")); // Output: false

// Toggle Boolean Array
function toggleBooleanArray(bools) {
 return bools.map(bool => !bool);
}
console.log(toggleBooleanArray([true, false, true])); // Output: [false, true, false]

// Concatenate and Sort Array
function concatenateAndSort(arr1, arr2) {
 return arr1.concat(arr2).sort((a, b) => a - b);
}
console.log(concatenateAndSort([3, 1], [2, 4])); // Output: [1, 2, 3, 4]

// Validate Palindrome String
function isPalindrome(str) {
 const cleaned = str.replace(/[^a-z0-9]/gi, '').toLowerCase();
 return cleaned === cleaned.split('').reverse().join('');
}
console.log(isPalindrome("A man, a plan, a canal, Panama")); // Output: true
console.log(isPalindrome("No palindrome")); // Output: false

// Generate Fibonacci Sequence
function generateFibonacci(n) {
 let fib = [0, 1];
 for (let i = 2; i < n; i++) {
 fib[i] = fib[i - 1] + fib[i - 2];
 }
 return fib.slice(0, n);
}
console.log(generateFibonacci(5)); // Output: [0, 1, 1, 2, 3]

// Convert Temperature from Celsius to Fahrenheit
function celsiusToFahrenheit(celsius) {
 return (celsius * 9/5) + 32;
}
console.log(celsiusToFahrenheit(0)); // Output: 32
console.log(celsiusToFahrenheit(100)); // Output: 212

// Check for Balanced Parentheses
function areParenthesesBalanced(str) {
 let stack = [];
 for (let char of str) {
 if (char === '(') {
 stack.push(char);
 } else if (char === ')') {
 if (stack.length === 0) return false;
 stack.pop();
 }
 }
 return stack.length === 0;
}
console.log(areParenthesesBalanced("(())()")); // Output: true
console.log(areParenthesesBalanced("(()")); // Output: false

// Remove Elements from Array
function removeElements(arr, ...toRemove) {
 return arr.filter(item => !toRemove.includes(item));
}
console.log(removeElements([1, 2, 3, 4, 5], 2, 3)); // Output: [1, 4, 5]

// Find All Numbers Disappeared in an Array
function findDisappearedNumbers(nums) {
 let result = [];
 let numSet = new Set(nums);
 for (let i = 1; i <= nums.length; i++) {
 if (!numSet.has(i)) {
 result.push(i);
 }
 }
 return result;
}
console.log(findDisappearedNumbers([4, 3, 2, 7, 8, 2, 3, 1])); // Output: [5, 6]

// Count Negative Numbers in a Grid
function countNegatives(grid) {
 let count = 0;
 for (let row of grid) {
 for (let num of row) {
 if (num < 0) {
 count++;
 }
 }
 }
 return count;
}
console.log(countNegatives([[4, 3, 2, -1], [3, 2, 1, -1], [1, 1, -1, -2], [-1, -1, -2, -3]])); // Output: 8

// Find Words That Can Be Formed by Characters
function countValidWords(words, chars) {
 const charCount = {};
 for (let char of chars) {
 if (charCount[char]) {
 charCount[char]++;
 } else {
 charCount[char] = 1;
 }
 }
 let validWords = 0;
 words.forEach(word => {
 const wordCount = {};
 for (let char of word) {
 if (wordCount[char]) {
 wordCount[char]++;
 } else {
 wordCount[char] = 1;
 }
 }
 let isValid = true;
 for (let char of word) {
 if (!charCount[char] || wordCount[char] > charCount[char]) {
 isValid = false;
 break;
 }
 }
 if (isValid) {
 validWords++;
 }
 });
 return validWords;
}
console.log(countValidWords(["cat", "bt", "hat", "tree"], "atach")); // Output: 2

// Calculate Total Time from Seconds
function formatTime(seconds) {
 const hours = Math.floor(seconds / 3600);
 seconds %= 3600;
 const minutes = Math.floor(seconds / 60);
 seconds %= 60;
 return `${hours}h:${minutes}m:${seconds}s`;
}
console.log(formatTime(3661)); // Output: "1h:1m:1s"

// Toggle Case for Each Letter in a String
function toggleCase(str) {
 return str.split('').map(char => char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase()).join('');
}
console.log(toggleCase("Hello World")); // Output: "hELLO wORLD"

Check if Array Elements Are Consecutive
function areConsecutive(arr) {
 const sorted = arr.sort((a, b) => a - b);
 for (let i = 1; i < sorted.length; i++) {
 if (sorted[i] !== sorted[i - 1] + 1) {
 return false;
 }
 }
 return true;
}
console.log(areConsecutive([5, 3, 4, 2, 1])); // Output: true
console.log(areConsecutive([5, 3, 1, 2, 8])); // Output: false
