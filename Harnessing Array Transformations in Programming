// Filter Out Non-Prime Numbers
function isPrime(num) {
 if (num <= 1) return false;
 for (let i = 2; i * i <= num; i++) {
 if (num % i === 0) return false;
 }
 return true;
}
function filterPrimes(arr) {
 return arr.filter(isPrime);
}
console.log(filterPrimes([1, 2, 3, 4, 5, 6, 7])); // Output: [2, 3, 5, 7]

// Return Longest Consecutive Sequence
function longestConsecutive(arr) {
 if (!arr.length) return 0;
 const set = new Set(arr);
 let longest = 0;
 for (let num of set) {
 if (!set.has(num - 1)) { // start of a sequence
 let length = 1;
 while (set.has(num + length)) {
 length++;
 }
 longest = Math.max(longest, length);
 }
 }
 return longest;
}
console.log(longestConsecutive([100, 4, 200, 1, 3, 2])); // Output: 4

// Count Letters Case Sensitive
function countCaseSensitiveLetters(str) {
 const counts = {};
 str.split('').forEach(char => {
 counts[char] = counts[char] + 1 || 1;
 });
 return counts;
}
console.log(countCaseSensitiveLetters("Hello World")); // Output: { H: 1, e: 1, l: 3, o: 2, W: 1, r: 1, d: 1 }

// Check If Array Contains a Duplicate Within k Distance
function containsNearbyDuplicate(nums, k) {
 let map = new Map();
 for (let i = 0; i < nums.length; i++) {
 if (map.has(nums[i]) && i - map.get(nums[i]) <= k) {
 return true;
 }
 map.set(nums[i], i);
 }
 return false;
}
console.log(containsNearbyDuplicate([1, 2, 3, 1], 3)); // Output: true
console.log(containsNearbyDuplicate([1, 0, 1, 1], 1)); // Output: true
console.log(containsNearbyDuplicate([1, 2, 3, 1, 2, 3], 2)); // Output: false

// Convert Binary Number in a Linked List to Integer
function getDecimalValue(head) {
 let num = 0;
 while (head) {
 num = num * 2 + head.val;
 head = head.next;
 }
 return num;
}
// Usage example (assuming linked list is implemented)
let head = { val: 1, next: { val: 0, next: { val: 1, next: null } } }; // represents binary 101
console.log(getDecimalValue(head)); // Output: 5

// Return Elements in Zigzag Order from 2D Array
function zigzagTraverse(array) {
 let result = [];
 let row = 0, col = 0, down = true;
 while (row < array.length && col < array[0].length) {
 result.push(array[row][col]);
 if (down) {
 if (col === 0 || row === array.length - 1) {
 down = false;
 if (row === array.length - 1) col++;
 else row++;
 } else {
 row++;
 col--;
 }
 } else {
 if (row === 0 || col === array[0].length - 1) {
 down = true;
 if (col === array[0].length - 1) row++;
 else col++;
 } else {
 row--;
 col++;
 }
 }
 }
 return result;
}
console.log(zigzagTraverse([[1, 2, 3], [4, 5, 6], [7, 8, 9]])); // Output: [1, 4, 2, 3, 5, 7, 6, 8, 9]

// Capitalize Titles
function capitalizeTitles(title) {
 return title.toLowerCase().split(' ').map((word, index) => {
 if (index === 0 || !["and", "the", "on"].includes(word)) {
 return word.charAt(0).toUpperCase() + word.slice(1);
 }
 return word;
 }).join(' ');
}
console.log(capitalizeTitles("the lion and the wardrobe")); // Output: "The Lion and the Wardrobe"

// Shuffle an Array
function shuffleArray(arr) {
 for (let i = arr.length - 1; i > 0; i--) {
 let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i
 [arr[i], arr[j]] = [arr[j], arr[i]]; // swap elements
 }
 return arr;
}
console.log(shuffleArray([1, 2, 3, 4, 5])); // Output: [3, 1, 4, 5, 2]

// Reverse Words in a Sentence
function reverseWords(sentence) {
 return sentence.split(' ').map(word => word.split('').reverse().join('')).join(' ');
}
console.log(reverseWords("Hello World")); // Output: "olleH dlroW"

// Find Median of Two Sorted Arrays
function findMedianSortedArrays(nums1, nums2) {
 let merged = nums1.concat(nums2).sort((a, b) => a - b);
 let mid = Math.floor(merged.length / 2);
 return merged.length % 2 !== 0 ? merged[mid] : (merged[mid - 1] + merged[mid]) / 2;
}
console.log(findMedianSortedArrays([1, 3], [2])); // Output: 2
console.log(findMedianSortedArrays([1, 2], [3, 4])); // Output: 2.5

// Count Words in a String
function countWords(str) {
 return str.split(/\s+/).filter(Boolean).length;
}
console.log(countWords("Hello world from JavaScript")); // Output: 4
console.log(countWords(" Hello world ")); // Output: 2

// Check if Number is Armstrong Number
function isArmstrongNumber(num) {
 let sum = 0, temp = num;
 while (temp > 0) {
 let digit = temp % 10;
 sum += digit ** 3;
 temp = Math.floor(temp / 10);
 }
 return sum === num;
}
console.log(isArmstrongNumber(153)); // Output: true
console.log(isArmstrongNumber(123)); // Output: false

// Intersect Two Arrays
function intersectArrays(arr1, arr2) {
 let set1 = new Set(arr1);
 return arr2.filter(item => set1.has(item));
}
console.log(intersectArrays([1, 2, 3, 4], [2, 4, 6])); // Output: [2, 4]

// Toggle Boolean Array
function toggleBooleans(bools) {
 return bools.map(bool => !bool);
}
console.log(toggleBooleans([true, false, true, true])); // Output: [false, true, false, false]
